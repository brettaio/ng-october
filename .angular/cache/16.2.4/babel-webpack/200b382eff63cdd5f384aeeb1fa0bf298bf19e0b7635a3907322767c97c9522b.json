{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class EnsureHttpsInterceptor {\n  intercept(req, next) {\n    // clone request and replace 'http://' with 'https://' at the same time\n    const secureReq = req.clone({\n      url: req.url.replace('http://', 'https://')\n    });\n    // send the cloned, \"secure\" request to the next handler.\n    return next.handle(secureReq);\n  }\n  static #_ = this.ɵfac = function EnsureHttpsInterceptor_Factory(t) {\n    return new (t || EnsureHttpsInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EnsureHttpsInterceptor,\n    factory: EnsureHttpsInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["EnsureHttpsInterceptor","intercept","req","next","secureReq","clone","url","replace","handle","_","_2","factory","ɵfac"],"sources":["c:\\brettaio\\ng-http\\src\\app\\http-interceptors\\ensure-https-interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class EnsureHttpsInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // clone request and replace 'http://' with 'https://' at the same time\n    const secureReq = req.clone({\n      url: req.url.replace('http://', 'https://')\n    });\n    // send the cloned, \"secure\" request to the next handler.\n    return next.handle(secureReq);\n  }\n}\n"],"mappings":";AAQA,OAAM,MAAOA,sBAAsB;EACjCC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD;IACA,MAAMC,SAAS,GAAGF,GAAG,CAACG,KAAK,CAAC;MAC1BC,GAAG,EAAEJ,GAAG,CAACI,GAAG,CAACC,OAAO,CAAC,SAAS,EAAE,UAAU;KAC3C,CAAC;IACF;IACA,OAAOJ,IAAI,CAACK,MAAM,CAACJ,SAAS,CAAC;EAC/B;EAAC,QAAAK,CAAA,G;qBARUT,sBAAsB;EAAA;EAAA,QAAAU,EAAA,G;WAAtBV,sBAAsB;IAAAW,OAAA,EAAtBX,sBAAsB,CAAAY;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}