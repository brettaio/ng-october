{"ast":null,"code":"import * as i0 from \"@angular/core\";\n/** Pass untouched request through to the next request handler. */\nexport class NoopInterceptor {\n  intercept(req, next) {\n    return next.handle(req);\n  }\n  static #_ = this.ɵfac = function NoopInterceptor_Factory(t) {\n    return new (t || NoopInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NoopInterceptor,\n    factory: NoopInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["NoopInterceptor","intercept","req","next","handle","_","_2","factory","ɵfac"],"sources":["c:\\brettaio\\ng-http\\src\\app\\http-interceptors\\noop-interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n/** Pass untouched request through to the next request handler. */\n@Injectable()\nexport class NoopInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler):\n    Observable<HttpEvent<any>> {\n    return next.handle(req);\n  }\n}\n"],"mappings":";AAOA;AAEA,OAAM,MAAOA,eAAe;EAE1BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAEhD,OAAOA,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC;EACzB;EAAC,QAAAG,CAAA,G;qBALUL,eAAe;EAAA;EAAA,QAAAM,EAAA,G;WAAfN,eAAe;IAAAO,OAAA,EAAfP,eAAe,CAAAQ;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}